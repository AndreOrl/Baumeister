# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v3

    - name: Run GitVersion
      id: gitversion
      uses: gittools/actions/gitversion/execute@v3
      with:
        useConfigFile: true
        configFilePath: ./GitVersion.yml
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore --nologo --warnaserror -c Release /p:IsPackable=false
      
    - name: Test
      run: dotnet test --no-build -c Release --verbosity normal --collect:"XPlat Code Coverage"

    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: **/coverage.cobertura.xml

    - name: Create Git Tag
      if: github.ref == 'refs/heads/main'
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git tag -a v${{ steps.gitversion.outputs.fullSemVer }} -m "Release v${{ steps.gitversion.outputs.fullSemVer }}"
        git push origin v${{ steps.gitversion.outputs.fullSemVer }}

    - name: Create release 
      if: github.ref == 'refs/heads/main'
      uses: softprops/action-gh-release@v2
      with:
        name: "Release ${{ steps.gitversion.outputs.fullSemVer }}"
        generate_release_notes: true
        draft: true
        prerelease: true

    - name: Pack
      if: github.ref == 'refs/heads/main'
      run: dotnet pack --configuration Release --output ./nupkg --no-build

    - name: Publish packages to nuget.org
      if: github.ref == 'refs/heads/main'
      run: dotnet nuget push "./nupkg/*.nupkg" --api-key ${{ secrets.NUGET_API_KEY }} --source "https://api.nuget.org/v3/index.json"
