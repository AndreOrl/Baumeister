<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <LangVersion>10</LangVersion>
    <Nullable>enable</Nullable>
    <EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
    <IsRoslynComponent>true</IsRoslynComponent>
    <IncludeBuildOutput>true</IncludeBuildOutput>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    <Title>Baumeister.Generators</Title>
    <RepositoryType>git</RepositoryType>
    <PackageProjectUrl>https://github.com/AndreOrl/Baumeister</PackageProjectUrl>
    <RepositoryUrl>https://github.com/AndreOrl/Baumeister</RepositoryUrl>
    <Authors>Andre Orl</Authors>
    <Description>Baumeister (german for "master builder") is a simple tool that helps by generating builder-pattern classes for your objects.</Description>
    <PackageReadmeFile>README.md</PackageReadmeFile>
  </PropertyGroup>
  <ItemGroup>
    <None Include="..\README.md">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>
  
  <ItemGroup>
    <None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
  </ItemGroup>
  
  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.11.0" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.11.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Baumeister.Abstractions\Baumeister.Abstractions.csproj" />
  </ItemGroup>

</Project>
